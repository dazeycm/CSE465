(define (x lis)
    (cond
        ((null? lis) 0)
        ((not (list? (car lis)))
            (cond
            ((eq? (car lis) #f) (x (cdr lis)))
            (else (+ 1 (x (cdr lis))))
            )
        )
        (else (+ (x (car lis)) (x (cdr lis))))
    )
)

This function counts the number of atomic elements in a list (that could contain nested lists), not including any element that is the bool false value